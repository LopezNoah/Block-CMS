---
import { type PageInsert } from "../../../lib/models/types";
import { db } from "../../../lib/drizzle";
import { pages } from "../../../lib/models/schema";
import PageForm from "../../../components/Page/PageForm.astro";
import { createForm } from "simple:form";
import z from "zod";
import type { Page } from "../../pages/foobar.astro";
import PageList from "../../../components/Page/PageList.astro";

const possibleLayouts = ["FullWidth"];
export const partial = true;

interface Props {
    id: number | undefined;
    title: string | null | undefined;
    description: string | null | undefined;
    layout: string | null | undefined;
};

export const pageEntryForm = createForm({
  description: z.string(),
  title: z.string(),
  layout: z.string()
});

const props = Astro.props;
const request = Astro.request;
const method = request.method;
const headers = request.headers;
const htmxRequest = headers.get('HX-Request') === 'true' ?? false;

console.log("HTMX request", htmxRequest);
console.log("request", Astro.request.method);
const res = await Astro.locals.form.getData(pageEntryForm);

let newPage: Page = {
    description: "",
    title: "",
    layout: "",
    id: 0
};

if (method === "POST" && htmxRequest && res !== undefined) {

    if (res.fieldErrors !== undefined) {
        throw new Error(JSON.stringify(res.fieldErrors));
    }

    if (res.data === undefined) {
        throw new Error("Data was undefined");
    }

    const values: PageInsert = {
        description: res.data.description,
        title: res.data.title,
        layout: res.data.layout
    };
    
    let newPage = (await db.insert(pages).values(values).returning().execute())[0];

    const realPages = await db.select().from(pages).execute();
    console.log("pages", realPages);
}
---
<div id="page-list" hx-swap-oob="true">
    <PageList></PageList>
</div>
<PageForm title={newPage.title} description={newPage.description} layout={newPage.layout} id={newPage.id}>
    {res?.fieldErrors?.description && (<div slot="description-error">Description is missing!</div>)}
</PageForm>