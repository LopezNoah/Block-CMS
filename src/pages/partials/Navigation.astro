---
export const partial = true;
import { Suspense } from 'simple-stack-stream/components';
const id = Astro.url.searchParams.get('id') || '';
import data from "../api/blocks.json";
import { type Page } from '../pages/[pageId].astro';
let blocks = data.pages[0].blocks;

console.log("in the navigation block")

type Block = {
    id: number;
    zone: string;
    text: string;
    type: string;
    list?: undefined;
    parentPageId?: undefined;
} | {
    id: number;
    zone: string;
    text: string;
    type: string;
    list: string[];
    parentPageId?: undefined;
} | {
    id: number;
    zone: string;
    text: string;
    type: string;
    list?: undefined;
    parentPageId?: number;
}

blocks = data.pages.reduce((acc, page) => 
    [...acc, ...page.blocks], [] as Block[]);

const block = blocks.find(b => b.id === Number(id));
const parentPageId = block?.parentPageId;
let pages: Page[];
if (parentPageId === 0) {
    pages = data.pages;
} else {
    pages = [];//data.pages.find(p => p.id == parentPageId);
}
let color = Number(id) % 2 == 1 ? 'bg-red-300' : 'bg-blue-300'; 

if (block === undefined) {
    return new Response("<p>The block is missing</p>", {
        headers: { 'Content-Type': 'text/html' }
    });
}

function artificialTimeWait(milliseconds: number) : Promise<void> {
    return new Promise(resolve => {
        setTimeout(() => { 
            resolve();
        }, milliseconds);
    });
}

Astro.response.headers.set('Cache-Control', 'max-age=3600, must-revalidate, public');
---
<Suspense>
    <div id={`bid_${id}`} class=`${color} m-4 p-2 rounded-md border-stone-800 border-2`>
        {pages.map(l => (
            <li>
                <a href={`${l.id}`}>{l.title}</a>
            </li>
        ))}
    </div>
    <div slot="fallback" class="bg-red-200">This is the fallback</div>
</Suspense>